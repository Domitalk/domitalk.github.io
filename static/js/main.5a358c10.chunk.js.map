{"version":3,"sources":["Components/Navi.js","Components/HomePage.js","Components/Project.js","fillData/projectData.js","Containers/ProjectsContainer.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["Navi","Navbar","static","bg","variant","Brand","Nav","className","Link","as","to","HomePage","Jumbotron","fluid","Container","Row","Col","xs","span","order","md","lg","Image","src","thumbnail","Card","Img","alt","ImgOverlay","Title","Text","Project","props","Header","project","header","imageUrl","Body","description","projectData","ProjectsContainer","map","About","Button","href","target","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5a358c10.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { Link, BrowserRouter as Router } from 'react-router-dom'\n\n\nfunction Navi() {\n    // For some reason I need to refresh with as={Link} to=\"/\" in order to change the view. \n    // Either fix this issue or else leave as a non-SPA\n\n    return (\n        <>\n            <Navbar static=\"top\" bg=\"light\" variant=\"light\">                \n                <Navbar.Brand >Dominic Chu</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/portfolio\">Home</Nav.Link>\n                    <Nav.Link as={Link} to=\"/portfolio/projects\">Projects</Nav.Link>\n                    <Nav.Link as={Link} to=\"/portfolio/about\">About</Nav.Link>\n                </Nav>\n            </Navbar>\n        </>\n    )\n}\n\nexport default Navi; ","import React from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\n\nfunction HomePage() {\n\n\n    return (\n        <div>\n            <Jumbotron fluid>\n                <Container>\n                    <Row>\n                        <Col xs={{ span: 12, order: 2}} md={{ span: 6, order: 1 }} lg={{ span: 7, order: 1 }}>\n                            <h1>Fluid Jumbotron</h1>\n                            <p>Put some stuff in here</p>\n                        </Col>\n                        <Col xs={{ span: 12, order: 1}} md={{ span: 6, order: 2}} lg={{ span: 5, order: 2}}>\n                            <Image src={\"https://res.cloudinary.com/dwazq8zps/image/upload/v1583940185/rbkhzipvosexmgvcxswh.jpg\"} thumbnail /> \n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <Container>\n                <Row>\n                    <Col xs={{ span: 12, order: 1 }} md={{ span: 6, order: 1 }} lg={{ span: 6, order: 1 }}>\n                        <Card className=\"bg-dark text-white mx-1 my-1\">\n                            <Card.Img src=\"https://res.cloudinary.com/dwazq8zps/image/upload/v1583940185/rbkhzipvosexmgvcxswh.jpg\" alt=\"Card image\" />\n                            <Card.ImgOverlay>\n                                <Card.Title>Card title</Card.Title>\n                                <Card.Text>\n                                This is a wider card with supporting text below as a natural lead-in to\n                                additional content. This content is a little bit longer.\n                                </Card.Text>\n                                <Card.Text>Last updated 3 mins ago</Card.Text>\n                            </Card.ImgOverlay>\n                        </Card>\n                    </Col>\n                    <Col xs={{ span: 12, order: 2 }} md={{ span: 6, order: 2 }} lg={{ span: 6, order: 2 }}>\n                        <Card className=\"bg-dark text-white mx-1 my-1\">\n                            <Card.Img src=\"https://res.cloudinary.com/dwazq8zps/image/upload/v1583940185/rbkhzipvosexmgvcxswh.jpg\" alt=\"Card image\" />\n                            <Card.ImgOverlay>\n                                <Card.Title>Card title</Card.Title>\n                                <Card.Text>\n                                This is a wider card with supporting text below as a natural lead-in to\n                                additional content. This content is a little bit longer.\n                                </Card.Text>\n                                <Card.Text>Last updated 3 mins ago</Card.Text>\n                            </Card.ImgOverlay>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default HomePage; ","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\n// {\n//     \"imageUrl\": \"\", \n//     \"header\": \"Header Example\", \n//     \"description\": \"Description Example\", \n//     \"demoLink\": \"\",\n//     \"gitFront\": \"\",\n//     \"gitBack\": \"\", \n//     \"liveSite\": \"\"\n// }\n\nfunction Project(props) {\n\n    return (\n        <Card className=\"mx-2 my-2\">\n            <Card.Header>{props.project.header}</Card.Header>\n            <Card.Img variant=\"top\" src={props.project.imageUrl} />\n            <Card.Body>\n                <Card.Text>\n                    {props.project.description}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Project; ","const projectData = [\n    {\n        \"imageUrl\": \"\", \n        \"header\": \"Header Example\", \n        \"description\": \"Description Example\", \n        \"demoLink\": \"\",\n        \"gitFront\": \"\",\n        \"gitBack\": \"\", \n        \"liveSite\": \"\"\n    },\n    {\n        \"imageUrl\": \"\", \n        \"header\": \"Header Example\", \n        \"description\": \"Description Example\", \n        \"demoLink\": \"\",\n        \"gitFront\": \"\",\n        \"gitBack\": \"\", \n        \"liveSite\": \"\"\n    }, \n    {\n        \"imageUrl\": \"\", \n        \"header\": \"Header Example\", \n        \"description\": \"Description Example\", \n        \"demoLink\": \"\",\n        \"gitFront\": \"\",\n        \"gitBack\": \"\", \n        \"liveSite\": \"\"\n    }, \n    {\n        \"imageUrl\": \"\", \n        \"header\": \"Header Example\", \n        \"description\": \"Description Example\", \n        \"demoLink\": \"\",\n        \"gitFront\": \"\",\n        \"gitBack\": \"\", \n        \"liveSite\": \"\"\n    }, \n    {\n        \"imageUrl\": \"\", \n        \"header\": \"Header Example\", \n        \"description\": \"Description Example\", \n        \"demoLink\": \"\",\n        \"gitFront\": \"\",\n        \"gitBack\": \"\", \n        \"liveSite\": \"\"\n    }, \n]\n\nexport default projectData","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Project from '../Components/Project'\nimport projectData from '../fillData/projectData.js'\n\n\n\nfunction ProjectsContainer() {\n\n    const mapAllProjects = () => {\n        return projectData.map((project) => {\n            return (\n                <Col xs={12} md={6} lg={4.1}>\n                    <Project project={project}/>\n                </Col>\n            )\n        })\n    }\n\n    return (\n        <Container>\n            <Row>\n                {mapAllProjects()}\n            </Row>\n        </Container>\n    )\n}\n\nexport default ProjectsContainer; ","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction About() {\n    return (\n        <Container>\n            <Row>\n                <Col xs={{ span: 12, order: 12 }} md={{ span: 6, order: 1 }} lg={{ span: 8, order: 1 }}>\n                    {/* DESCRIP: botton on small, left on med/big */}\n\n                    <Card className=\"my-1\">\n                        <Card.Header>My Story</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                <p>\n                                    A recent Flatiron School graduate with a passion for coding and a background in education.\n                                </p>\n                                <p>\n                                    Wether it's frontend with JavaScript or backend with Ruby, I just love learning new technologies that help make better code.\n                                </p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <Card className=\"my-1\">\n                        <Card.Header>My Resume</Card.Header>\n                        <Card.Img variant=\"top\" src=\"https://images.template.net/wp-content/uploads/2018/11/Free-Blank-Resume-Template.jpg\" />\n                        <Card.Body>\n                            {/* onClick download the files */}\n                            <Button variant=\"outline-primary\" className=\"mx-1 my-1\">\n                                DOCX\n                            </Button>\n                            <Button variant=\"outline-primary\" className=\"mx-1 my-1\">\n                                PDF\n                            </Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xs={{ span: 12, order: 1 }} md={{ span: 6, order: 2 }} lg={{ span: 4, order: 2 }}> \n                    {/* PROFILE: top on small, right on med/big */}\n\n                    <Card className=\"my-1\">\n                        <Card.Header>About Me</Card.Header>\n                        <Card.Img variant=\"top\" src=\"https://res.cloudinary.com/dwazq8zps/image/upload/v1584021356/rjxnmkljufeqadsc9k1r.jpg\" />\n                        <Card.Body>\n                            <Card.Text>\n                                <p>\n                                    JavaScript, React.js, Ruby, Rails, Java, and SQL.\n                                </p>\n                                <p>\n                                    My coding journey started with Ruby and after learning how to make a backend with Rails I dove into JavaScript. Recently I've been making applications with React.js and learning Java on my own. \n                                </p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <Card className=\"my-1\">\n                        <Card.Header>Links</Card.Header>\n                        <Card.Body>\n                            <Button variant=\"outline-primary\" className=\"mx-1 my-1\" href=\"http://github.com/domitalk\" target=\"_blank\">\n                                Github\n                            </Button>\n                            <Button variant=\"outline-primary\" className=\"mx-1 my-1\" href=\"https://www.linkedin.com/in/dominic-m-chu\" target=\"_blank\">\n                                LinkedIn\n                            </Button>\n                            <Button variant=\"outline-primary\" className=\"mx-1 my-1\" href=\"https://medium.com/@dominic.m.chu\" target=\"_blank\">\n                                Blog\n                            </Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default About; ","import React from 'react';\nimport './App.css';\nimport Navi from \"./Components/Navi\"\nimport HomePage from './Components/HomePage'\nimport ProjectsContainer from './Containers/ProjectsContainer.js'\nimport About from './Components/About'\nimport {\n  Switch,\n  Route, \n  BrowserRouter as Router\n} from 'react-router-dom'\n\n// need to make 3 seperate sites. mobile/normal/xxl \n\nfunction App() {\n  return (\n      <Router>\n        <Navi/>\n        <Switch>\n          <Route path=\"/portfolio\" exact component={HomePage}/>\n          <Route path=\"/portfolio/projects\" exact component={ProjectsContainer}/>\n          <Route path=\"/portfolio/about\" exact component={About} />\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}